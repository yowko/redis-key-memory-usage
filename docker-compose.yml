version: "3"
services:
  redis1:
    image: redis:latest
    command: redis-server --port 7000 --cluster-enabled yes --cluster-config-file nodes.conf --cluster-announce-ip ${ip}
    ports:
      - "7000:7000"
      - "17000:17000"
    healthcheck:
      test: [ "CMD", "redis-cli", "-p", "7000", "cluster", "info" ]
      interval: 1s
      timeout: 3s
      retries: 30
  redis2:
    image: redis:latest
    command: redis-server --port 7001 --cluster-enabled yes --cluster-config-file nodes.conf --cluster-announce-ip ${ip}
    ports:
      - "7001:7001"
      - "17001:17001"
    healthcheck:
      test: [ "CMD", "redis-cli", "-p", "7001", "cluster", "info" ]
      interval: 1s
      timeout: 3s
      retries: 30
  redis3:
    image: redis:latest
    command: redis-server --port 7002 --cluster-enabled yes --cluster-config-file nodes.conf --cluster-announce-ip ${ip}
    ports:
      - "7002:7002"
      - "17002:17002"
    healthcheck:
      test: [ "CMD", "redis-cli", "-p", "7002", "cluster", "info" ]
      interval: 1s
      timeout: 3s
      retries: 30
  redis4:
    image: redis:latest
    command: redis-server --port 7003 --cluster-enabled yes --cluster-config-file nodes.conf --cluster-announce-ip ${ip}
    ports:
      - "7003:7003"
      - "17003:17003"
    healthcheck:
      test: [ "CMD", "redis-cli", "-p", "7003", "cluster", "info" ]
      interval: 1s
      timeout: 3s
      retries: 30
  redis5:
    image: redis:latest
    command: redis-server --port 7004 --cluster-enabled yes --cluster-config-file nodes.conf --cluster-announce-ip ${ip}
    ports:
      - "7004:7004"
      - "17004:17004"
    healthcheck:
      test: [ "CMD", "redis-cli", "-p", "7004", "cluster", "info" ]
      interval: 1s
      timeout: 3s
      retries: 30
  redis6:
    image: redis:latest
    command: redis-server --port 7005 --cluster-enabled yes --cluster-config-file nodes.conf --cluster-announce-ip ${ip}
    ports:
      - "7005:7005"
      - "17005:17005"
    healthcheck:
      test: [ "CMD", "redis-cli", "-p", "7005", "cluster", "info" ]
      interval: 1s
      timeout: 3s
      retries: 30
  redis-cluster-creator:
    image: redis
    entrypoint: [/bin/sh,-c,'echo "yes" | redis-cli --cluster create ${ip}:7000 ${ip}:7001 ${ip}:7002 ${ip}:7003 ${ip}:7004 ${ip}:7005 --cluster-replicas 1']
#    healthcheck:
#      test: [ "CMD", "echo", "'yes'", "|", "redis-cli" ,"--cluster" ,"create" ,"${ip}:7000", "${ip}:7001", "${ip}:7002", "${ip}:7003", "${ip}:7004", "${ip}:7005", "--cluster-replicas", "1" ]
#      interval: 3s
#      timeout: 3s
#      retries: 30
    depends_on:
      redis1:
        condition: service_healthy
      redis2:
        condition: service_healthy
      redis3:
        condition: service_healthy
      redis4:
        condition: service_healthy
      redis5:
        condition: service_healthy
      redis6:
        condition: service_healthy